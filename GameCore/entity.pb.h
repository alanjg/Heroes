// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_entity_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_entity_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_entity_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_entity_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_entity_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_entity_2eproto_metadata_getter(int index);
namespace heroes {
class ClientCommand;
struct ClientCommandDefaultTypeInternal;
extern ClientCommandDefaultTypeInternal _ClientCommand_default_instance_;
class ClientCommandResult;
struct ClientCommandResultDefaultTypeInternal;
extern ClientCommandResultDefaultTypeInternal _ClientCommandResult_default_instance_;
class CreateGameRequest;
struct CreateGameRequestDefaultTypeInternal;
extern CreateGameRequestDefaultTypeInternal _CreateGameRequest_default_instance_;
class CreateGameResponse;
struct CreateGameResponseDefaultTypeInternal;
extern CreateGameResponseDefaultTypeInternal _CreateGameResponse_default_instance_;
class Entity;
struct EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class JoinGameRequest;
struct JoinGameRequestDefaultTypeInternal;
extern JoinGameRequestDefaultTypeInternal _JoinGameRequest_default_instance_;
class JoinGameResponse;
struct JoinGameResponseDefaultTypeInternal;
extern JoinGameResponseDefaultTypeInternal _JoinGameResponse_default_instance_;
class ServerState;
struct ServerStateDefaultTypeInternal;
extern ServerStateDefaultTypeInternal _ServerState_default_instance_;
class UpdateStateRequest;
struct UpdateStateRequestDefaultTypeInternal;
extern UpdateStateRequestDefaultTypeInternal _UpdateStateRequest_default_instance_;
}  // namespace heroes
PROTOBUF_NAMESPACE_OPEN
template<> ::heroes::ClientCommand* Arena::CreateMaybeMessage<::heroes::ClientCommand>(Arena*);
template<> ::heroes::ClientCommandResult* Arena::CreateMaybeMessage<::heroes::ClientCommandResult>(Arena*);
template<> ::heroes::CreateGameRequest* Arena::CreateMaybeMessage<::heroes::CreateGameRequest>(Arena*);
template<> ::heroes::CreateGameResponse* Arena::CreateMaybeMessage<::heroes::CreateGameResponse>(Arena*);
template<> ::heroes::Entity* Arena::CreateMaybeMessage<::heroes::Entity>(Arena*);
template<> ::heroes::JoinGameRequest* Arena::CreateMaybeMessage<::heroes::JoinGameRequest>(Arena*);
template<> ::heroes::JoinGameResponse* Arena::CreateMaybeMessage<::heroes::JoinGameResponse>(Arena*);
template<> ::heroes::ServerState* Arena::CreateMaybeMessage<::heroes::ServerState>(Arena*);
template<> ::heroes::UpdateStateRequest* Arena::CreateMaybeMessage<::heroes::UpdateStateRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace heroes {

enum Entity_Status : int {
  Entity_Status_IDLE = 0,
  Entity_Status_MOVING = 1,
  Entity_Status_ATTACKING = 2,
  Entity_Status_ATTACKED = 3,
  Entity_Status_SPECIAL = 4,
  Entity_Status_DYING = 5,
  Entity_Status_DEAD = 6,
  Entity_Status_Entity_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Entity_Status_Entity_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Entity_Status_IsValid(int value);
constexpr Entity_Status Entity_Status_Status_MIN = Entity_Status_IDLE;
constexpr Entity_Status Entity_Status_Status_MAX = Entity_Status_DEAD;
constexpr int Entity_Status_Status_ARRAYSIZE = Entity_Status_Status_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Entity_Status_descriptor();
template<typename T>
inline const std::string& Entity_Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Entity_Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Entity_Status_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Entity_Status_descriptor(), enum_t_value);
}
inline bool Entity_Status_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Entity_Status* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Entity_Status>(
    Entity_Status_descriptor(), name, value);
}
enum ClientCommand_Command : int {
  ClientCommand_Command_NONE = 0,
  ClientCommand_Command_MOVE_TO_POINT = 1,
  ClientCommand_Command_FOLLOW_UNIT = 2,
  ClientCommand_Command_ATTACK_UNIT = 3,
  ClientCommand_Command_ATTACK_POINT = 4,
  ClientCommand_Command_STOP = 5,
  ClientCommand_Command_HOLD = 6,
  ClientCommand_Command_SPECIAL = 7,
  ClientCommand_Command_ClientCommand_Command_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ClientCommand_Command_ClientCommand_Command_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ClientCommand_Command_IsValid(int value);
constexpr ClientCommand_Command ClientCommand_Command_Command_MIN = ClientCommand_Command_NONE;
constexpr ClientCommand_Command ClientCommand_Command_Command_MAX = ClientCommand_Command_SPECIAL;
constexpr int ClientCommand_Command_Command_ARRAYSIZE = ClientCommand_Command_Command_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientCommand_Command_descriptor();
template<typename T>
inline const std::string& ClientCommand_Command_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ClientCommand_Command>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ClientCommand_Command_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ClientCommand_Command_descriptor(), enum_t_value);
}
inline bool ClientCommand_Command_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ClientCommand_Command* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ClientCommand_Command>(
    ClientCommand_Command_descriptor(), name, value);
}
// ===================================================================

class CreateGameRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.CreateGameRequest) */ {
 public:
  inline CreateGameRequest() : CreateGameRequest(nullptr) {}
  virtual ~CreateGameRequest();
  explicit constexpr CreateGameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateGameRequest(const CreateGameRequest& from);
  CreateGameRequest(CreateGameRequest&& from) noexcept
    : CreateGameRequest() {
    *this = ::std::move(from);
  }

  inline CreateGameRequest& operator=(const CreateGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGameRequest& operator=(CreateGameRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGameRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGameRequest*>(
               &_CreateGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateGameRequest& a, CreateGameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateGameRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateGameRequest* New() const final {
    return CreateMaybeMessage<CreateGameRequest>(nullptr);
  }

  CreateGameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateGameRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateGameRequest& from);
  void MergeFrom(const CreateGameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateGameRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.CreateGameRequest";
  }
  protected:
  explicit CreateGameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumPlayersFieldNumber = 1,
  };
  // int32 numPlayers = 1;
  void clear_numplayers();
  ::PROTOBUF_NAMESPACE_ID::int32 numplayers() const;
  void set_numplayers(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_numplayers() const;
  void _internal_set_numplayers(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.CreateGameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 numplayers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class CreateGameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.CreateGameResponse) */ {
 public:
  inline CreateGameResponse() : CreateGameResponse(nullptr) {}
  virtual ~CreateGameResponse();
  explicit constexpr CreateGameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateGameResponse(const CreateGameResponse& from);
  CreateGameResponse(CreateGameResponse&& from) noexcept
    : CreateGameResponse() {
    *this = ::std::move(from);
  }

  inline CreateGameResponse& operator=(const CreateGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGameResponse& operator=(CreateGameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateGameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGameResponse* internal_default_instance() {
    return reinterpret_cast<const CreateGameResponse*>(
               &_CreateGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateGameResponse& a, CreateGameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateGameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateGameResponse* New() const final {
    return CreateMaybeMessage<CreateGameResponse>(nullptr);
  }

  CreateGameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateGameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateGameResponse& from);
  void MergeFrom(const CreateGameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateGameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.CreateGameResponse";
  }
  protected:
  explicit CreateGameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.CreateGameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class JoinGameRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.JoinGameRequest) */ {
 public:
  inline JoinGameRequest() : JoinGameRequest(nullptr) {}
  virtual ~JoinGameRequest();
  explicit constexpr JoinGameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JoinGameRequest(const JoinGameRequest& from);
  JoinGameRequest(JoinGameRequest&& from) noexcept
    : JoinGameRequest() {
    *this = ::std::move(from);
  }

  inline JoinGameRequest& operator=(const JoinGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinGameRequest& operator=(JoinGameRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JoinGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinGameRequest* internal_default_instance() {
    return reinterpret_cast<const JoinGameRequest*>(
               &_JoinGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(JoinGameRequest& a, JoinGameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(JoinGameRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinGameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JoinGameRequest* New() const final {
    return CreateMaybeMessage<JoinGameRequest>(nullptr);
  }

  JoinGameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JoinGameRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JoinGameRequest& from);
  void MergeFrom(const JoinGameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinGameRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.JoinGameRequest";
  }
  protected:
  explicit JoinGameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 2,
    kGameIdFieldNumber = 1,
  };
  // string player = 2;
  void clear_player();
  const std::string& player() const;
  void set_player(const std::string& value);
  void set_player(std::string&& value);
  void set_player(const char* value);
  void set_player(const char* value, size_t size);
  std::string* mutable_player();
  std::string* release_player();
  void set_allocated_player(std::string* player);
  private:
  const std::string& _internal_player() const;
  void _internal_set_player(const std::string& value);
  std::string* _internal_mutable_player();
  public:

  // int32 gameId = 1;
  void clear_gameid();
  ::PROTOBUF_NAMESPACE_ID::int32 gameid() const;
  void set_gameid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gameid() const;
  void _internal_set_gameid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.JoinGameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_;
  ::PROTOBUF_NAMESPACE_ID::int32 gameid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class JoinGameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.JoinGameResponse) */ {
 public:
  inline JoinGameResponse() : JoinGameResponse(nullptr) {}
  virtual ~JoinGameResponse();
  explicit constexpr JoinGameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JoinGameResponse(const JoinGameResponse& from);
  JoinGameResponse(JoinGameResponse&& from) noexcept
    : JoinGameResponse() {
    *this = ::std::move(from);
  }

  inline JoinGameResponse& operator=(const JoinGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JoinGameResponse& operator=(JoinGameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JoinGameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const JoinGameResponse* internal_default_instance() {
    return reinterpret_cast<const JoinGameResponse*>(
               &_JoinGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(JoinGameResponse& a, JoinGameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(JoinGameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JoinGameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JoinGameResponse* New() const final {
    return CreateMaybeMessage<JoinGameResponse>(nullptr);
  }

  JoinGameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JoinGameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JoinGameResponse& from);
  void MergeFrom(const JoinGameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinGameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.JoinGameResponse";
  }
  protected:
  explicit JoinGameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 playerId = 1;
  void clear_playerid();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid() const;
  void set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid() const;
  void _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.JoinGameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class Entity PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.Entity) */ {
 public:
  inline Entity() : Entity(nullptr) {}
  virtual ~Entity();
  explicit constexpr Entity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Entity(const Entity& from);
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Entity& default_instance() {
    return *internal_default_instance();
  }
  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }
  inline void Swap(Entity* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Entity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const final {
    return CreateMaybeMessage<Entity>(nullptr);
  }

  Entity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Entity>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Entity* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.Entity";
  }
  protected:
  explicit Entity(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef Entity_Status Status;
  static constexpr Status IDLE =
    Entity_Status_IDLE;
  static constexpr Status MOVING =
    Entity_Status_MOVING;
  static constexpr Status ATTACKING =
    Entity_Status_ATTACKING;
  static constexpr Status ATTACKED =
    Entity_Status_ATTACKED;
  static constexpr Status SPECIAL =
    Entity_Status_SPECIAL;
  static constexpr Status DYING =
    Entity_Status_DYING;
  static constexpr Status DEAD =
    Entity_Status_DEAD;
  static inline bool Status_IsValid(int value) {
    return Entity_Status_IsValid(value);
  }
  static constexpr Status Status_MIN =
    Entity_Status_Status_MIN;
  static constexpr Status Status_MAX =
    Entity_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE =
    Entity_Status_Status_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Status_descriptor() {
    return Entity_Status_descriptor();
  }
  template<typename T>
  static inline const std::string& Status_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Status>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Status_Name.");
    return Entity_Status_Name(enum_t_value);
  }
  static inline bool Status_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Status* value) {
    return Entity_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kControllingPlayerFieldNumber = 1,
    kIdFieldNumber = 2,
    kEntityTypeFieldNumber = 3,
    kPositionXFieldNumber = 4,
    kPositionYFieldNumber = 5,
    kPositionZFieldNumber = 6,
    kVelocityXFieldNumber = 7,
    kVelocityYFieldNumber = 8,
    kVelocityZFieldNumber = 9,
    kOrientationFieldNumber = 10,
    kTargetPointXFieldNumber = 11,
    kTargetPointYFieldNumber = 12,
    kTargetPointZFieldNumber = 13,
    kStatusFieldNumber = 14,
  };
  // int32 controllingPlayer = 1;
  void clear_controllingplayer();
  ::PROTOBUF_NAMESPACE_ID::int32 controllingplayer() const;
  void set_controllingplayer(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_controllingplayer() const;
  void _internal_set_controllingplayer(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 entityType = 3;
  void clear_entitytype();
  ::PROTOBUF_NAMESPACE_ID::int32 entitytype() const;
  void set_entitytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entitytype() const;
  void _internal_set_entitytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float positionX = 4;
  void clear_positionx();
  float positionx() const;
  void set_positionx(float value);
  private:
  float _internal_positionx() const;
  void _internal_set_positionx(float value);
  public:

  // float positionY = 5;
  void clear_positiony();
  float positiony() const;
  void set_positiony(float value);
  private:
  float _internal_positiony() const;
  void _internal_set_positiony(float value);
  public:

  // float positionZ = 6;
  void clear_positionz();
  float positionz() const;
  void set_positionz(float value);
  private:
  float _internal_positionz() const;
  void _internal_set_positionz(float value);
  public:

  // float velocityX = 7;
  void clear_velocityx();
  float velocityx() const;
  void set_velocityx(float value);
  private:
  float _internal_velocityx() const;
  void _internal_set_velocityx(float value);
  public:

  // float velocityY = 8;
  void clear_velocityy();
  float velocityy() const;
  void set_velocityy(float value);
  private:
  float _internal_velocityy() const;
  void _internal_set_velocityy(float value);
  public:

  // float velocityZ = 9;
  void clear_velocityz();
  float velocityz() const;
  void set_velocityz(float value);
  private:
  float _internal_velocityz() const;
  void _internal_set_velocityz(float value);
  public:

  // float orientation = 10;
  void clear_orientation();
  float orientation() const;
  void set_orientation(float value);
  private:
  float _internal_orientation() const;
  void _internal_set_orientation(float value);
  public:

  // float targetPointX = 11;
  void clear_targetpointx();
  float targetpointx() const;
  void set_targetpointx(float value);
  private:
  float _internal_targetpointx() const;
  void _internal_set_targetpointx(float value);
  public:

  // float targetPointY = 12;
  void clear_targetpointy();
  float targetpointy() const;
  void set_targetpointy(float value);
  private:
  float _internal_targetpointy() const;
  void _internal_set_targetpointy(float value);
  public:

  // float targetPointZ = 13;
  void clear_targetpointz();
  float targetpointz() const;
  void set_targetpointz(float value);
  private:
  float _internal_targetpointz() const;
  void _internal_set_targetpointz(float value);
  public:

  // .heroes.Entity.Status status = 14;
  void clear_status();
  ::heroes::Entity_Status status() const;
  void set_status(::heroes::Entity_Status value);
  private:
  ::heroes::Entity_Status _internal_status() const;
  void _internal_set_status(::heroes::Entity_Status value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.Entity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 controllingplayer_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 entitytype_;
  float positionx_;
  float positiony_;
  float positionz_;
  float velocityx_;
  float velocityy_;
  float velocityz_;
  float orientation_;
  float targetpointx_;
  float targetpointy_;
  float targetpointz_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class ClientCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.ClientCommand) */ {
 public:
  inline ClientCommand() : ClientCommand(nullptr) {}
  virtual ~ClientCommand();
  explicit constexpr ClientCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClientCommand(const ClientCommand& from);
  ClientCommand(ClientCommand&& from) noexcept
    : ClientCommand() {
    *this = ::std::move(from);
  }

  inline ClientCommand& operator=(const ClientCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientCommand& operator=(ClientCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientCommand* internal_default_instance() {
    return reinterpret_cast<const ClientCommand*>(
               &_ClientCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ClientCommand& a, ClientCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientCommand* New() const final {
    return CreateMaybeMessage<ClientCommand>(nullptr);
  }

  ClientCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientCommand& from);
  void MergeFrom(const ClientCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.ClientCommand";
  }
  protected:
  explicit ClientCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef ClientCommand_Command Command;
  static constexpr Command NONE =
    ClientCommand_Command_NONE;
  static constexpr Command MOVE_TO_POINT =
    ClientCommand_Command_MOVE_TO_POINT;
  static constexpr Command FOLLOW_UNIT =
    ClientCommand_Command_FOLLOW_UNIT;
  static constexpr Command ATTACK_UNIT =
    ClientCommand_Command_ATTACK_UNIT;
  static constexpr Command ATTACK_POINT =
    ClientCommand_Command_ATTACK_POINT;
  static constexpr Command STOP =
    ClientCommand_Command_STOP;
  static constexpr Command HOLD =
    ClientCommand_Command_HOLD;
  static constexpr Command SPECIAL =
    ClientCommand_Command_SPECIAL;
  static inline bool Command_IsValid(int value) {
    return ClientCommand_Command_IsValid(value);
  }
  static constexpr Command Command_MIN =
    ClientCommand_Command_Command_MIN;
  static constexpr Command Command_MAX =
    ClientCommand_Command_Command_MAX;
  static constexpr int Command_ARRAYSIZE =
    ClientCommand_Command_Command_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Command_descriptor() {
    return ClientCommand_Command_descriptor();
  }
  template<typename T>
  static inline const std::string& Command_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Command>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Command_Name.");
    return ClientCommand_Command_Name(enum_t_value);
  }
  static inline bool Command_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Command* value) {
    return ClientCommand_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 1,
    kUnitIdFieldNumber = 2,
    kTargetParameterFieldNumber = 3,
    kTargetPointXFieldNumber = 4,
    kTargetPointYFieldNumber = 5,
    kTargetPointZFieldNumber = 6,
    kTargetIdFieldNumber = 7,
    kPlayerIdFieldNumber = 8,
  };
  // .heroes.ClientCommand.Command command = 1;
  void clear_command();
  ::heroes::ClientCommand_Command command() const;
  void set_command(::heroes::ClientCommand_Command value);
  private:
  ::heroes::ClientCommand_Command _internal_command() const;
  void _internal_set_command(::heroes::ClientCommand_Command value);
  public:

  // int32 unitId = 2;
  void clear_unitid();
  ::PROTOBUF_NAMESPACE_ID::int32 unitid() const;
  void set_unitid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unitid() const;
  void _internal_set_unitid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 targetParameter = 3;
  void clear_targetparameter();
  ::PROTOBUF_NAMESPACE_ID::int32 targetparameter() const;
  void set_targetparameter(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetparameter() const;
  void _internal_set_targetparameter(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float targetPointX = 4;
  void clear_targetpointx();
  float targetpointx() const;
  void set_targetpointx(float value);
  private:
  float _internal_targetpointx() const;
  void _internal_set_targetpointx(float value);
  public:

  // float targetPointY = 5;
  void clear_targetpointy();
  float targetpointy() const;
  void set_targetpointy(float value);
  private:
  float _internal_targetpointy() const;
  void _internal_set_targetpointy(float value);
  public:

  // float targetPointZ = 6;
  void clear_targetpointz();
  float targetpointz() const;
  void set_targetpointz(float value);
  private:
  float _internal_targetpointz() const;
  void _internal_set_targetpointz(float value);
  public:

  // int32 targetId = 7;
  void clear_targetid();
  ::PROTOBUF_NAMESPACE_ID::int32 targetid() const;
  void set_targetid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetid() const;
  void _internal_set_targetid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 playerId = 8;
  void clear_playerid();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid() const;
  void set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid() const;
  void _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.ClientCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int command_;
  ::PROTOBUF_NAMESPACE_ID::int32 unitid_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetparameter_;
  float targetpointx_;
  float targetpointy_;
  float targetpointz_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetid_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class ClientCommandResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.ClientCommandResult) */ {
 public:
  inline ClientCommandResult() : ClientCommandResult(nullptr) {}
  virtual ~ClientCommandResult();
  explicit constexpr ClientCommandResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClientCommandResult(const ClientCommandResult& from);
  ClientCommandResult(ClientCommandResult&& from) noexcept
    : ClientCommandResult() {
    *this = ::std::move(from);
  }

  inline ClientCommandResult& operator=(const ClientCommandResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientCommandResult& operator=(ClientCommandResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientCommandResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientCommandResult* internal_default_instance() {
    return reinterpret_cast<const ClientCommandResult*>(
               &_ClientCommandResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ClientCommandResult& a, ClientCommandResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientCommandResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientCommandResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientCommandResult* New() const final {
    return CreateMaybeMessage<ClientCommandResult>(nullptr);
  }

  ClientCommandResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientCommandResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientCommandResult& from);
  void MergeFrom(const ClientCommandResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientCommandResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.ClientCommandResult";
  }
  protected:
  explicit ClientCommandResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:heroes.ClientCommandResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class UpdateStateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.UpdateStateRequest) */ {
 public:
  inline UpdateStateRequest() : UpdateStateRequest(nullptr) {}
  virtual ~UpdateStateRequest();
  explicit constexpr UpdateStateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateStateRequest(const UpdateStateRequest& from);
  UpdateStateRequest(UpdateStateRequest&& from) noexcept
    : UpdateStateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateStateRequest& operator=(const UpdateStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateStateRequest& operator=(UpdateStateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateStateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateStateRequest*>(
               &_UpdateStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UpdateStateRequest& a, UpdateStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateStateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateStateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateStateRequest* New() const final {
    return CreateMaybeMessage<UpdateStateRequest>(nullptr);
  }

  UpdateStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateStateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateStateRequest& from);
  void MergeFrom(const UpdateStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateStateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.UpdateStateRequest";
  }
  protected:
  explicit UpdateStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int32 playerId = 1;
  void clear_playerid();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid() const;
  void set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid() const;
  void _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:heroes.UpdateStateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// -------------------------------------------------------------------

class ServerState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:heroes.ServerState) */ {
 public:
  inline ServerState() : ServerState(nullptr) {}
  virtual ~ServerState();
  explicit constexpr ServerState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerState(const ServerState& from);
  ServerState(ServerState&& from) noexcept
    : ServerState() {
    *this = ::std::move(from);
  }

  inline ServerState& operator=(const ServerState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerState& operator=(ServerState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerState* internal_default_instance() {
    return reinterpret_cast<const ServerState*>(
               &_ServerState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ServerState& a, ServerState& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerState* New() const final {
    return CreateMaybeMessage<ServerState>(nullptr);
  }

  ServerState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerState& from);
  void MergeFrom(const ServerState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "heroes.ServerState";
  }
  protected:
  explicit ServerState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_entity_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntitiesFieldNumber = 1,
  };
  // repeated .heroes.Entity entities = 1;
  int entities_size() const;
  private:
  int _internal_entities_size() const;
  public:
  void clear_entities();
  ::heroes::Entity* mutable_entities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::heroes::Entity >*
      mutable_entities();
  private:
  const ::heroes::Entity& _internal_entities(int index) const;
  ::heroes::Entity* _internal_add_entities();
  public:
  const ::heroes::Entity& entities(int index) const;
  ::heroes::Entity* add_entities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::heroes::Entity >&
      entities() const;

  // @@protoc_insertion_point(class_scope:heroes.ServerState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::heroes::Entity > entities_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_entity_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateGameRequest

// int32 numPlayers = 1;
inline void CreateGameRequest::clear_numplayers() {
  numplayers_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateGameRequest::_internal_numplayers() const {
  return numplayers_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateGameRequest::numplayers() const {
  // @@protoc_insertion_point(field_get:heroes.CreateGameRequest.numPlayers)
  return _internal_numplayers();
}
inline void CreateGameRequest::_internal_set_numplayers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  numplayers_ = value;
}
inline void CreateGameRequest::set_numplayers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_numplayers(value);
  // @@protoc_insertion_point(field_set:heroes.CreateGameRequest.numPlayers)
}

// -------------------------------------------------------------------

// CreateGameResponse

// int32 id = 1;
inline void CreateGameResponse::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateGameResponse::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateGameResponse::id() const {
  // @@protoc_insertion_point(field_get:heroes.CreateGameResponse.id)
  return _internal_id();
}
inline void CreateGameResponse::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void CreateGameResponse::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:heroes.CreateGameResponse.id)
}

// -------------------------------------------------------------------

// JoinGameRequest

// int32 gameId = 1;
inline void JoinGameRequest::clear_gameid() {
  gameid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JoinGameRequest::_internal_gameid() const {
  return gameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JoinGameRequest::gameid() const {
  // @@protoc_insertion_point(field_get:heroes.JoinGameRequest.gameId)
  return _internal_gameid();
}
inline void JoinGameRequest::_internal_set_gameid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gameid_ = value;
}
inline void JoinGameRequest::set_gameid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:heroes.JoinGameRequest.gameId)
}

// string player = 2;
inline void JoinGameRequest::clear_player() {
  player_.ClearToEmpty();
}
inline const std::string& JoinGameRequest::player() const {
  // @@protoc_insertion_point(field_get:heroes.JoinGameRequest.player)
  return _internal_player();
}
inline void JoinGameRequest::set_player(const std::string& value) {
  _internal_set_player(value);
  // @@protoc_insertion_point(field_set:heroes.JoinGameRequest.player)
}
inline std::string* JoinGameRequest::mutable_player() {
  // @@protoc_insertion_point(field_mutable:heroes.JoinGameRequest.player)
  return _internal_mutable_player();
}
inline const std::string& JoinGameRequest::_internal_player() const {
  return player_.Get();
}
inline void JoinGameRequest::_internal_set_player(const std::string& value) {
  
  player_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void JoinGameRequest::set_player(std::string&& value) {
  
  player_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:heroes.JoinGameRequest.player)
}
inline void JoinGameRequest::set_player(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:heroes.JoinGameRequest.player)
}
inline void JoinGameRequest::set_player(const char* value,
    size_t size) {
  
  player_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:heroes.JoinGameRequest.player)
}
inline std::string* JoinGameRequest::_internal_mutable_player() {
  
  return player_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* JoinGameRequest::release_player() {
  // @@protoc_insertion_point(field_release:heroes.JoinGameRequest.player)
  return player_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void JoinGameRequest::set_allocated_player(std::string* player) {
  if (player != nullptr) {
    
  } else {
    
  }
  player_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:heroes.JoinGameRequest.player)
}

// -------------------------------------------------------------------

// JoinGameResponse

// int32 playerId = 1;
inline void JoinGameResponse::clear_playerid() {
  playerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JoinGameResponse::_internal_playerid() const {
  return playerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JoinGameResponse::playerid() const {
  // @@protoc_insertion_point(field_get:heroes.JoinGameResponse.playerId)
  return _internal_playerid();
}
inline void JoinGameResponse::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  playerid_ = value;
}
inline void JoinGameResponse::set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:heroes.JoinGameResponse.playerId)
}

// -------------------------------------------------------------------

// Entity

// int32 controllingPlayer = 1;
inline void Entity::clear_controllingplayer() {
  controllingplayer_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::_internal_controllingplayer() const {
  return controllingplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::controllingplayer() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.controllingPlayer)
  return _internal_controllingplayer();
}
inline void Entity::_internal_set_controllingplayer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  controllingplayer_ = value;
}
inline void Entity::set_controllingplayer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_controllingplayer(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.controllingPlayer)
}

// int32 id = 2;
inline void Entity::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::id() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.id)
  return _internal_id();
}
inline void Entity::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Entity::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.id)
}

// int32 entityType = 3;
inline void Entity::clear_entitytype() {
  entitytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::_internal_entitytype() const {
  return entitytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Entity::entitytype() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.entityType)
  return _internal_entitytype();
}
inline void Entity::_internal_set_entitytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  entitytype_ = value;
}
inline void Entity::set_entitytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entitytype(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.entityType)
}

// float positionX = 4;
inline void Entity::clear_positionx() {
  positionx_ = 0;
}
inline float Entity::_internal_positionx() const {
  return positionx_;
}
inline float Entity::positionx() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.positionX)
  return _internal_positionx();
}
inline void Entity::_internal_set_positionx(float value) {
  
  positionx_ = value;
}
inline void Entity::set_positionx(float value) {
  _internal_set_positionx(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.positionX)
}

// float positionY = 5;
inline void Entity::clear_positiony() {
  positiony_ = 0;
}
inline float Entity::_internal_positiony() const {
  return positiony_;
}
inline float Entity::positiony() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.positionY)
  return _internal_positiony();
}
inline void Entity::_internal_set_positiony(float value) {
  
  positiony_ = value;
}
inline void Entity::set_positiony(float value) {
  _internal_set_positiony(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.positionY)
}

// float positionZ = 6;
inline void Entity::clear_positionz() {
  positionz_ = 0;
}
inline float Entity::_internal_positionz() const {
  return positionz_;
}
inline float Entity::positionz() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.positionZ)
  return _internal_positionz();
}
inline void Entity::_internal_set_positionz(float value) {
  
  positionz_ = value;
}
inline void Entity::set_positionz(float value) {
  _internal_set_positionz(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.positionZ)
}

// float velocityX = 7;
inline void Entity::clear_velocityx() {
  velocityx_ = 0;
}
inline float Entity::_internal_velocityx() const {
  return velocityx_;
}
inline float Entity::velocityx() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.velocityX)
  return _internal_velocityx();
}
inline void Entity::_internal_set_velocityx(float value) {
  
  velocityx_ = value;
}
inline void Entity::set_velocityx(float value) {
  _internal_set_velocityx(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.velocityX)
}

// float velocityY = 8;
inline void Entity::clear_velocityy() {
  velocityy_ = 0;
}
inline float Entity::_internal_velocityy() const {
  return velocityy_;
}
inline float Entity::velocityy() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.velocityY)
  return _internal_velocityy();
}
inline void Entity::_internal_set_velocityy(float value) {
  
  velocityy_ = value;
}
inline void Entity::set_velocityy(float value) {
  _internal_set_velocityy(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.velocityY)
}

// float velocityZ = 9;
inline void Entity::clear_velocityz() {
  velocityz_ = 0;
}
inline float Entity::_internal_velocityz() const {
  return velocityz_;
}
inline float Entity::velocityz() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.velocityZ)
  return _internal_velocityz();
}
inline void Entity::_internal_set_velocityz(float value) {
  
  velocityz_ = value;
}
inline void Entity::set_velocityz(float value) {
  _internal_set_velocityz(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.velocityZ)
}

// float orientation = 10;
inline void Entity::clear_orientation() {
  orientation_ = 0;
}
inline float Entity::_internal_orientation() const {
  return orientation_;
}
inline float Entity::orientation() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.orientation)
  return _internal_orientation();
}
inline void Entity::_internal_set_orientation(float value) {
  
  orientation_ = value;
}
inline void Entity::set_orientation(float value) {
  _internal_set_orientation(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.orientation)
}

// float targetPointX = 11;
inline void Entity::clear_targetpointx() {
  targetpointx_ = 0;
}
inline float Entity::_internal_targetpointx() const {
  return targetpointx_;
}
inline float Entity::targetpointx() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.targetPointX)
  return _internal_targetpointx();
}
inline void Entity::_internal_set_targetpointx(float value) {
  
  targetpointx_ = value;
}
inline void Entity::set_targetpointx(float value) {
  _internal_set_targetpointx(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.targetPointX)
}

// float targetPointY = 12;
inline void Entity::clear_targetpointy() {
  targetpointy_ = 0;
}
inline float Entity::_internal_targetpointy() const {
  return targetpointy_;
}
inline float Entity::targetpointy() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.targetPointY)
  return _internal_targetpointy();
}
inline void Entity::_internal_set_targetpointy(float value) {
  
  targetpointy_ = value;
}
inline void Entity::set_targetpointy(float value) {
  _internal_set_targetpointy(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.targetPointY)
}

// float targetPointZ = 13;
inline void Entity::clear_targetpointz() {
  targetpointz_ = 0;
}
inline float Entity::_internal_targetpointz() const {
  return targetpointz_;
}
inline float Entity::targetpointz() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.targetPointZ)
  return _internal_targetpointz();
}
inline void Entity::_internal_set_targetpointz(float value) {
  
  targetpointz_ = value;
}
inline void Entity::set_targetpointz(float value) {
  _internal_set_targetpointz(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.targetPointZ)
}

// .heroes.Entity.Status status = 14;
inline void Entity::clear_status() {
  status_ = 0;
}
inline ::heroes::Entity_Status Entity::_internal_status() const {
  return static_cast< ::heroes::Entity_Status >(status_);
}
inline ::heroes::Entity_Status Entity::status() const {
  // @@protoc_insertion_point(field_get:heroes.Entity.status)
  return _internal_status();
}
inline void Entity::_internal_set_status(::heroes::Entity_Status value) {
  
  status_ = value;
}
inline void Entity::set_status(::heroes::Entity_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:heroes.Entity.status)
}

// -------------------------------------------------------------------

// ClientCommand

// .heroes.ClientCommand.Command command = 1;
inline void ClientCommand::clear_command() {
  command_ = 0;
}
inline ::heroes::ClientCommand_Command ClientCommand::_internal_command() const {
  return static_cast< ::heroes::ClientCommand_Command >(command_);
}
inline ::heroes::ClientCommand_Command ClientCommand::command() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.command)
  return _internal_command();
}
inline void ClientCommand::_internal_set_command(::heroes::ClientCommand_Command value) {
  
  command_ = value;
}
inline void ClientCommand::set_command(::heroes::ClientCommand_Command value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.command)
}

// int32 unitId = 2;
inline void ClientCommand::clear_unitid() {
  unitid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::_internal_unitid() const {
  return unitid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::unitid() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.unitId)
  return _internal_unitid();
}
inline void ClientCommand::_internal_set_unitid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  unitid_ = value;
}
inline void ClientCommand::set_unitid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unitid(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.unitId)
}

// int32 targetParameter = 3;
inline void ClientCommand::clear_targetparameter() {
  targetparameter_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::_internal_targetparameter() const {
  return targetparameter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::targetparameter() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.targetParameter)
  return _internal_targetparameter();
}
inline void ClientCommand::_internal_set_targetparameter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetparameter_ = value;
}
inline void ClientCommand::set_targetparameter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetparameter(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.targetParameter)
}

// float targetPointX = 4;
inline void ClientCommand::clear_targetpointx() {
  targetpointx_ = 0;
}
inline float ClientCommand::_internal_targetpointx() const {
  return targetpointx_;
}
inline float ClientCommand::targetpointx() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.targetPointX)
  return _internal_targetpointx();
}
inline void ClientCommand::_internal_set_targetpointx(float value) {
  
  targetpointx_ = value;
}
inline void ClientCommand::set_targetpointx(float value) {
  _internal_set_targetpointx(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.targetPointX)
}

// float targetPointY = 5;
inline void ClientCommand::clear_targetpointy() {
  targetpointy_ = 0;
}
inline float ClientCommand::_internal_targetpointy() const {
  return targetpointy_;
}
inline float ClientCommand::targetpointy() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.targetPointY)
  return _internal_targetpointy();
}
inline void ClientCommand::_internal_set_targetpointy(float value) {
  
  targetpointy_ = value;
}
inline void ClientCommand::set_targetpointy(float value) {
  _internal_set_targetpointy(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.targetPointY)
}

// float targetPointZ = 6;
inline void ClientCommand::clear_targetpointz() {
  targetpointz_ = 0;
}
inline float ClientCommand::_internal_targetpointz() const {
  return targetpointz_;
}
inline float ClientCommand::targetpointz() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.targetPointZ)
  return _internal_targetpointz();
}
inline void ClientCommand::_internal_set_targetpointz(float value) {
  
  targetpointz_ = value;
}
inline void ClientCommand::set_targetpointz(float value) {
  _internal_set_targetpointz(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.targetPointZ)
}

// int32 targetId = 7;
inline void ClientCommand::clear_targetid() {
  targetid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::_internal_targetid() const {
  return targetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::targetid() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.targetId)
  return _internal_targetid();
}
inline void ClientCommand::_internal_set_targetid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetid_ = value;
}
inline void ClientCommand::set_targetid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetid(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.targetId)
}

// int32 playerId = 8;
inline void ClientCommand::clear_playerid() {
  playerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::_internal_playerid() const {
  return playerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::playerid() const {
  // @@protoc_insertion_point(field_get:heroes.ClientCommand.playerId)
  return _internal_playerid();
}
inline void ClientCommand::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  playerid_ = value;
}
inline void ClientCommand::set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:heroes.ClientCommand.playerId)
}

// -------------------------------------------------------------------

// ClientCommandResult

// -------------------------------------------------------------------

// UpdateStateRequest

// int32 playerId = 1;
inline void UpdateStateRequest::clear_playerid() {
  playerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateStateRequest::_internal_playerid() const {
  return playerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateStateRequest::playerid() const {
  // @@protoc_insertion_point(field_get:heroes.UpdateStateRequest.playerId)
  return _internal_playerid();
}
inline void UpdateStateRequest::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  playerid_ = value;
}
inline void UpdateStateRequest::set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:heroes.UpdateStateRequest.playerId)
}

// -------------------------------------------------------------------

// ServerState

// repeated .heroes.Entity entities = 1;
inline int ServerState::_internal_entities_size() const {
  return entities_.size();
}
inline int ServerState::entities_size() const {
  return _internal_entities_size();
}
inline void ServerState::clear_entities() {
  entities_.Clear();
}
inline ::heroes::Entity* ServerState::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:heroes.ServerState.entities)
  return entities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::heroes::Entity >*
ServerState::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:heroes.ServerState.entities)
  return &entities_;
}
inline const ::heroes::Entity& ServerState::_internal_entities(int index) const {
  return entities_.Get(index);
}
inline const ::heroes::Entity& ServerState::entities(int index) const {
  // @@protoc_insertion_point(field_get:heroes.ServerState.entities)
  return _internal_entities(index);
}
inline ::heroes::Entity* ServerState::_internal_add_entities() {
  return entities_.Add();
}
inline ::heroes::Entity* ServerState::add_entities() {
  // @@protoc_insertion_point(field_add:heroes.ServerState.entities)
  return _internal_add_entities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::heroes::Entity >&
ServerState::entities() const {
  // @@protoc_insertion_point(field_list:heroes.ServerState.entities)
  return entities_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace heroes

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::heroes::Entity_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::heroes::Entity_Status>() {
  return ::heroes::Entity_Status_descriptor();
}
template <> struct is_proto_enum< ::heroes::ClientCommand_Command> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::heroes::ClientCommand_Command>() {
  return ::heroes::ClientCommand_Command_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_entity_2eproto
